<?php


namespace Modules\Admin\core\Repositories;


use Modules\common\components\elasticsearch\ElasticSearch;

class ProductESRepository extends EloquentRepository implements IProductESReposiroty
{
    public function getModel()
    {
        // TODO: Implement getModel() method.
        return \Modules\Admin\Entities\Product::class;
    }

    public function store($data)
    {
        // TODO: Change the autogenerated stub
        $product = $this->model->where('MaSP',$data)
            ->join('loaisanpham','loaisanpham.MaLoaiSP','sanpham.MaLoaiSP')
            ->join('thuonghieu','thuonghieu.MaThuongHieu','sanpham.MaThuongHieu')
            ->where('sanpham.deleteFlag','=',0)
            ->get()->toArray();
        $params =[
            'index' => 'gear',
            'type' => 'product',
            'id' => $data,
            'body' => $product[0]
        ];
        $es = new ElasticSearch();
        $isIndexed = $es->index($params);
        return ("index version " . $isIndexed['_version'] . " with id: " . $params['id']);
    }

    public function saveAllToES(){
        $listProduct = $this->model
            ->join('loaisanpham','loaisanpham.MaLoaiSP','sanpham.MaLoaiSP')
            ->join('thuonghieu','thuonghieu.MaThuongHieu','sanpham.MaThuongHieu')
            ->where('sanpham.deleteFlag','=',0)
            ->get()->toArray();
        $es = new ElasticSearch();
        foreach ($listProduct as $k => $v){
            $params = [
              'index' => 'gear',
              'type' => 'product',
              'id' => $v['MaSP'],
              'body' => $v
            ];
            $es->index($params);
        }
    }

    public function getAll()
    {
        $params = [
            'index' => 'gear',
            'type' => 'product',
            'body' => [
                'sort' => [
                    'MaSP' => 'desc'
                ]
            ]
        ];
        $es = new ElasticSearch();
        $search = $es->search($params);
        $arrProducts = [];
        foreach ($search['hits']['hits'] as $k => $v){
            $arrProducts[] = $v['_source'];
        }
        return $arrProducts;
    }

    public function productByLoaiSP($MaLoaiSP){
        $params = [
            'scroll' => '30s',
            'size' => 10,
            'index' => 'gear',
            'type' => 'product',
            'body' => [
                'query' => [
                    'bool' => [
                        'must' => [
                            'match' => [
                                'MaLoaiSP' => $MaLoaiSP
                            ]
                        ]
                    ]
                ]
            ]
        ];
        $es = new ElasticSearch();
        $search = $es->search($params);
        $arrProducts = [];
        foreach ($search['hits']['hits'] as $k => $v){
            $arrProducts[] = $v['_source'];
        }
        return $arrProducts;
    }

    public function search($data)
    {
        // TODO: Implement search() method.
        $params = [
          'index' => 'gear',
          'type' => 'product',
        ];
        if(!empty($data['TenSP'])&&empty($data['MaLoaiSP'])&&empty($data['MaThuongHieu'])){
            $queryTenSP = [
                'query' => [
                    'bool' => [
                        'must' =>
                        [
                            'match_phrase' => [
                                'TenSP' => $data['TenSP']
                            ]
                        ]
                    ]
                ]
            ];
            $params['body'] = $queryTenSP;
        }
        if(!empty($data['TenSP'])&&!empty($data['MaLoaiSP'])&&!empty($data['MaThuongHieu'])){
            $queryFull = [
                'query' =>[
                    'bool' => [
                        'must' => [
                            [ 'match' => [ 'TenSP' => $data['TenSP'] ] ],
                            [
                                'terms' => [
                                    'MaThuongHieu' => [$data['MaThuongHieu']]
                                ]
                            ],
                            [
                                'terms' => [
                                    'MaLoaiSP' => [$data['MaLoaiSP']]
                                ]
                            ]
                        ],
                    ]
                ]
            ];
            $params['body'] = $queryFull;
        }
        if(!empty($data['TenSP'])&&!empty($data['MaLoaiSP'])&&empty($data['MaThuongHieu'])){
            $queryTenSP_LoaiSP = [
                'query' =>[
                    'bool' => [
                        'must' => [
                            [ 'match' => [ 'TenSP' => $data['TenSP'] ] ],
                            [
                                'terms' => [
                                    'MaLoaiSP' => [$data['MaLoaiSP']]
                                ]
                            ]
                        ],
                    ]
                ]
            ];
            $params['body'] = $queryTenSP_LoaiSP;
        }
        if(!empty($data['TenSP'])&&empty($data['MaLoaiSP'])&&!empty($data['MaThuongHieu'])){
            $queryTenSP_ThuongHieu = [
                'query' =>[
                    'bool' => [
                        'must' => [
                            [ 'match' => [ 'TenSP' => $data['TenSP'] ] ],
                            [
                                'terms' => [
                                    'MaThuongHieu' => [$data['MaThuongHieu']]
                                ]
                            ],
                        ],
                    ]
                ]
            ];
            $params['body'] = $queryTenSP_ThuongHieu;
        }
        if(empty($data['TenSP'])&&!empty($data['MaLoaiSP'])&&empty($data['MaThuongHieu'])){
            $queryLoaiSP = [
                'query' => [
                    'bool' => [
                        'must' => [
                            'match' => [
                                'MaLoaiSP' => $data['MaLoaiSP']
                            ]
                        ]
                    ]
                ]
            ];
            $params['body'] = $queryLoaiSP;
        }
        if(empty($data['TenSP'])&&empty($data['MaLoaiSP'])&&!empty($data['MaThuongHieu'])){
            $queryThuongHieu = [
                'query' => [
                    'bool' => [
                        'must' => [
                            'match' => [
                                'MaThuongHieu' => $data['MaThuongHieu']
                            ]
                        ]
                    ]
                ]
            ];
            $params['body'] = $queryThuongHieu;
        }
        if(empty($data['TenSP'])&&!empty($data['MaLoaiSP'])&&!empty($data['MaThuongHieu'])){
            $queryThuongHieu_LoaiSP = [
                'query' => [
                    "bool" => [
                        "must" => [
                            [
                                "terms" => [
                                    "MaThuongHieu" => [
                                        $data['MaThuongHieu']
                                    ],
                                ]
                            ],
                            [
                                "terms" => [
                                    "MaLoaiSP" => [
                                        $data['MaLoaiSP']
                                    ],
                                ]
                            ]
                        ],
                    ],
                    ]
            ];
            $params['body'] = $queryThuongHieu_LoaiSP;
        }
        $es = new ElasticSearch();
        $search = $es->search($params);
        $arrProducts = [];
        foreach ($search['hits']['hits'] as $k => $v){
            $arrProducts[] = $v['_source'];
        }
        return $arrProducts;
    }

    public function show($id){
        $params = [
            'index' => 'gear',
            'type' => 'product',
            'body' => [
                'query' => [
                    'match' => [
                        'MaSP' => $id
                    ]
                ]
            ]
        ];
        $es = new ElasticSearch();
        $show = $es->search($params);
        return $show['hits']['hits'][0]['_source'];
    }

    public function destroy($id)
    {
        $params = [
            'index' => 'gear',
            'type' => 'product',
            'id' => $id
        ];
        $es = new ElasticSearch();
        $delete = $es->delete($params);
        return $delete;
    }

    public function paginate($number)
    {
        $params = [
            'scroll' => '30s',
            'index' => 'gear',
            'type' => 'product',
            'size' => $number,
            'body' => [
                'sort' => [
                    'MaSP' => 'desc'
                ]
            ]
        ];
        $es = new ElasticSearch();
        $response = $es->search($params);
//        while (isset($response['hits']['hits']) && count($response['hits']['hits']) > 0) {
//
//            // **
//            // Do your work here, on the $response['hits']['hits'] array
//            // **
//
//            // When done, get the new scroll_id
//            // You must always refresh your _scroll_id!  It can change sometimes
//            $scroll_id = $response['_scroll_id'];
//            // Execute a Scroll request and repeat
//            $response = $es->scroll([
//                    "scroll_id" => $scroll_id,  //...using our previously obtained _scroll_id
//                    "scroll" => "30s"           // and the same timeout window
//                ]
//            );
//        }
        $arrProducts = [];
        foreach ($response['hits']['hits'] as $k => $v){
            $arrProducts[] = $v['_source'];
        }
        return $arrProducts;
    }
}